name: Coverage Report V2

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
      - 'release/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage

      - name: Run tests and generate coverage
        run: |
          PYTHONPATH=. pytest -s --cov=mymodule
          coverage xml

      - name: set env from pull_request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "SOURCE_BRANCH=${{ github.event.pull_request.head.ref }}" | tee -a $GITHUB_ENV
          echo "TARGET_BRANCH=${{ github.event.pull_request.base.ref }}" | tee -a $GITHUB_ENV
          # torch or onnx maybe part of this var
          if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "TARGET_COV_PATH=../coverage" | tee -a $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.base.ref }}" == release/* ]]; then
            echo "TARGET_COV_PATH=../${{ github.event.pull_request.base.ref }}/coverage" | tee -a $GITHUB_ENV
          else
            echo "unexpectedâ€œ
          fi
        

      - name: Report coverage
        uses: insightsengineering/coverage-action@v2
        with:
          # path: ${{ env.COVERAGE_PATH }}
          token: ${{ secrets.CI_TOKEN }}
          publish: true
          threshold: 95
          diff: true
          diff-branch: .
          diff-storage: gh-pages
          storage-subdirectory: ${{ env.TARGET_COV_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_BRANCH: ${{ env.SOURCE_BRANCH }} # pr branch
          TARGET_BRANCH: ${{ env.TARGET_BRANCH }} # main or rls branch
          TARGET_COV_PATH: ${{ env.TARGET_COV_PATH }}
